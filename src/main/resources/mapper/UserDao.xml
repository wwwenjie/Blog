<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.jinwenjie.dao.UserDao">
  <resultMap id="BaseResultMap" type="me.jinwenjie.model.User">
    <constructor>
      <idArg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
      <arg column="user_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
      <arg column="user_email" javaType="java.lang.String" jdbcType="VARCHAR"/>
      <arg column="user_password" javaType="java.lang.String" jdbcType="VARCHAR"/>
      <arg column="user_profile_photo" javaType="java.lang.String" jdbcType="VARCHAR"/>
      <arg column="user_gender" javaType="java.lang.String" jdbcType="VARCHAR"/>
      <arg column="user_bday" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
      <arg column="user_registration_date" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
      <arg column="user_ip" javaType="java.lang.String" jdbcType="VARCHAR"/>
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_name, user_email, user_password, user_profile_photo, user_gender, user_bday, 
    user_registration_date, user_ip
  </sql>
  <select id="findAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"></include>
    from user
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="me.jinwenjie.model.User">
    insert into user (user_id, user_name, user_email,
                      user_password, user_profile_photo, user_gender,
                      user_bday, user_registration_date, user_ip)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR},
            #{userPassword,jdbcType=VARCHAR}, #{userProfilePhoto,jdbcType=VARCHAR}, #{userGender,jdbcType=VARCHAR},
            #{userBday,jdbcType=TIMESTAMP}, #{userRegistrationDate,jdbcType=TIMESTAMP}, #{userIp,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="me.jinwenjie.model.User">
    update user
    set user_name              = #{userName,jdbcType=VARCHAR},
        user_email             = #{userEmail,jdbcType=VARCHAR},
        user_password          = #{userPassword,jdbcType=VARCHAR},
        user_profile_photo     = #{userProfilePhoto,jdbcType=VARCHAR},
        user_gender            = #{userGender,jdbcType=VARCHAR},
        user_bday              = #{userBday,jdbcType=TIMESTAMP},
        user_registration_date = #{userRegistrationDate,jdbcType=TIMESTAMP},
        user_ip                = #{userIp,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>